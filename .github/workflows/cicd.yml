name: CI Pipeline - Build Docker Image Locally

on:
  push:
    branches: [main]

jobs:
  checkout:
    runs-on: self-hosted
    outputs:
      build_tag: ${{ steps.set_tag.outputs.tag }}
      python-ready: yes
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask flake8

    - name: Lint Python code
      run: flake8 src/app.py

    - name: Run Python app in background
      run: |
        python src/app.py &
        sleep 5
        
    - name: Set BUILD_TAG from timestamp
      id: set_tag
      run: echo "tag=$(date +%Y%m%d%H%M%S)" >> "$GITHUB_OUTPUT"
      
  build-image:
    runs-on: self-hosted
    needs: checkout
    env:
      SHORT_SHA: ${{ needs.checkout.outputs.short_sha }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image with timestamp
      run: |
       TAG=${{ needs.checkout.outputs.build_tag }}
       docker build -t hello-world-app:$TAG .

    - name: Verify Docker image created
      run: docker images | grep hello-world-app

  save-upload:
    runs-on: self-hosted
    needs: build-image
    steps:
    - name: Save Docker image to folder
      run: |
        TAG=${{ needs.checkout.outputs.build_tag }}
        mkdir -p docker-images
        docker save hello-world-app:$TAG -o docker-images/hello-world-app-$TAG.tar

    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v4
      with:
        name: hello-world-app-${{ needs.checkout.outputs.build_tag }}
        path: docker-images/hello-world-app-${{ needs.checkout.outputs.build_tag }}.tar


        
